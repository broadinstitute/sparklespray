name: pyright-ratchet

on: 
  push:
      paths:
         - "*.py"
         - "**/*.py"
         - .github/workflows/pyright-ratchet.yaml

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.4.2"
           
jobs:
  check-pyright:
    runs-on: ubuntu-latest

    steps:
      - name: print branch
        run: echo ${{ env.BRANCH_NAME }}
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      # the following logic for caching taken from https://gist.github.com/gh640/233a6daf68e9e937115371c0ecd39c61
      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}
      # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Set up poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: |
          cd cli
          poetry install
      - name: Run pyratchet
        run: |
          cd cli 
          poetry run pyright-ratchet run pyright
      - name: Run tests
        run: |
          cd cli
          poetry run pytest
